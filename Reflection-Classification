{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":11192668,"sourceType":"datasetVersion","datasetId":6987357}],"dockerImageVersionId":30918,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import pandas as pd\nimport joblib\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.metrics import classification_report\nfrom sklearn.preprocessing import LabelEncoder\n\n# Load the dataset\ndata = pd.read_csv('/kaggle/input/iregreteverything/dataset.csv')  # Replace with your dataset file name\n\n# Encode categorical columns\nencoder = LabelEncoder()\ncategorical_columns = [\n    'Senang_Sekolah', 'Frekuensi_Bermain', 'Kesulitan_Belajar', 'Tingkat_Bertengkar',\n    'Frekuensi_Membantu', 'Aktivitas_Favorit', 'Rencana_Besok', 'Kepuasan_Hari',\n    'Peningkatan_Besok', 'Perasaan_Sekolah', 'Stres_Tingkat', 'Interaksi_Teman_Keluarga',\n    'Dukungan_Sosial', 'Keyakinan_Tujuan_Hidup', 'Perasaan_Karier', 'Interaksi_Orang_Lain'\n]\nfor column in categorical_columns:\n    data[column] = encoder.fit_transform(data[column].astype(str))\n\n# Map Mood to numerical values\nmood_mapping = {\"Senang\": 1, \"Biasa saja\": 2, \"Sedikit sedih\": 3, \"Sangat sedih\": 4}\ndata['Mood'] = data['Mood'].map(mood_mapping)\n\n# Split data by age group\nanak_columns = ['Senang_Sekolah', 'Frekuensi_Bermain', 'Kesulitan_Belajar', 'Tingkat_Bertengkar',\n                'Frekuensi_Membantu', 'Aktivitas_Favorit', 'Rencana_Besok', 'Kepuasan_Hari',\n                'Peningkatan_Besok']  # Features for Anak-Anak\nremaja_columns = ['Perasaan_Sekolah', 'Stres_Tingkat', 'Aktivitas_Favorit',\n                  'Interaksi_Teman_Keluarga', 'Dukungan_Sosial', 'Rencana_Besok',\n                  'Keyakinan_Tujuan_Hidup']  # Features for Remaja\ndewasa_columns = ['Perasaan_Karier', 'Stres_Tingkat', 'Aktivitas_Favorit',\n                  'Interaksi_Orang_Lain', 'Dukungan_Sosial', 'Rencana_Besok',\n                  'Keyakinan_Tujuan_Hidup']  # Features for Dewasa\n\n# Train model for Anak-Anak\nX_anak = data[anak_columns]\ny_anak = data['Mood']\nX_train_anak, X_test_anak, y_train_anak, y_test_anak = train_test_split(X_anak, y_anak, test_size=0.2, random_state=42)\nmodel_anak = GradientBoostingClassifier(random_state=42)\nmodel_anak.fit(X_train_anak, y_train_anak)\nprint(\"Anak-Anak Model Performance:\")\nprint(classification_report(y_test_anak, model_anak.predict(X_test_anak)))\njoblib.dump(model_anak, 'mood_prediction_model_anak.pkl')\n\n# Train model for Remaja\nX_remaja = data[remaja_columns]\ny_remaja = data['Mood']\nX_train_remaja, X_test_remaja, y_train_remaja, y_test_remaja = train_test_split(X_remaja, y_remaja, test_size=0.2, random_state=42)\nmodel_remaja = GradientBoostingClassifier(random_state=42)\nmodel_remaja.fit(X_train_remaja, y_train_remaja)\nprint(\"Remaja Model Performance:\")\nprint(classification_report(y_test_remaja, model_remaja.predict(X_test_remaja)))\njoblib.dump(model_remaja, 'mood_prediction_model_remaja.pkl')\n\n# Train model for Dewasa\nX_dewasa = data[dewasa_columns]\ny_dewasa = data['Mood']\nX_train_dewasa, X_test_dewasa, y_train_dewasa, y_test_dewasa = train_test_split(X_dewasa, y_dewasa, test_size=0.2, random_state=42)\nmodel_dewasa = GradientBoostingClassifier(random_state=42)\nmodel_dewasa.fit(X_train_dewasa, y_train_dewasa)\nprint(\"Dewasa Model Performance:\")\nprint(classification_report(y_test_dewasa, model_dewasa.predict(X_test_dewasa)))\njoblib.dump(model_dewasa, 'mood_prediction_model_dewasa.pkl')","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-03-28T06:33:58.336975Z","iopub.execute_input":"2025-03-28T06:33:58.337305Z","iopub.status.idle":"2025-03-28T06:34:10.787683Z","shell.execute_reply.started":"2025-03-28T06:33:58.337279Z","shell.execute_reply":"2025-03-28T06:34:10.786197Z"}},"outputs":[{"name":"stdout","text":"Anak-Anak Model Performance:\n              precision    recall  f1-score   support\n\n           1       0.25      0.25      0.25       754\n           2       0.26      0.20      0.23       750\n           3       0.27      0.35      0.30       770\n           4       0.25      0.22      0.24       726\n\n    accuracy                           0.26      3000\n   macro avg       0.26      0.26      0.25      3000\nweighted avg       0.26      0.26      0.25      3000\n\nRemaja Model Performance:\n              precision    recall  f1-score   support\n\n           1       0.23      0.17      0.20       754\n           2       0.23      0.21      0.22       750\n           3       0.26      0.36      0.30       770\n           4       0.23      0.22      0.23       726\n\n    accuracy                           0.24      3000\n   macro avg       0.24      0.24      0.24      3000\nweighted avg       0.24      0.24      0.24      3000\n\nDewasa Model Performance:\n              precision    recall  f1-score   support\n\n           1       0.25      0.17      0.20       754\n           2       0.22      0.18      0.20       750\n           3       0.27      0.39      0.32       770\n           4       0.24      0.25      0.24       726\n\n    accuracy                           0.25      3000\n   macro avg       0.24      0.25      0.24      3000\nweighted avg       0.24      0.25      0.24      3000\n\n","output_type":"stream"},{"name":"stderr","text":"/usr/local/lib/python3.10/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names\n  warnings.warn(\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-17-35fbcd545ceb>\u001b[0m in \u001b[0;36m<cell line: 73>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     71\u001b[0m \u001b[0msample_dewasa\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m4\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m       \u001b[0;31m# Dewasa\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     72\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 73\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Predicted Mood for Anak-Anak:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmood_mapping\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmodel_anak\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msample_anak\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     74\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Predicted Mood for Remaja:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmood_mapping\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmodel_remaja\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msample_remaja\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     75\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Predicted Mood for Dewasa:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmood_mapping\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmodel_dewasa\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msample_dewasa\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 1"],"ename":"KeyError","evalue":"1","output_type":"error"}],"execution_count":17},{"cell_type":"code","source":"import pandas as pd\nimport joblib\n\n# Load the trained models\nmodel_anak = joblib.load('/kaggle/working/mood_prediction_model_anak.pkl')\nmodel_remaja = joblib.load('/kaggle/working/mood_prediction_model_remaja.pkl')\nmodel_dewasa = joblib.load('/kaggle/working/mood_prediction_model_dewasa.pkl')\n\n# Define input samples as DataFrames with matching feature names\nsample_anak = pd.DataFrame([{\n    'Senang_Sekolah': 2,  # \"Cukup senang\" -> 2\n    'Frekuensi_Bermain': 2,  # \"Tidak sama sekali\" -> 2\n    'Kesulitan_Belajar': 3,  # \"Sangat sulit\" -> 3\n    'Tingkat_Bertengkar': 2,  # \"Bertengkar\" -> 2\n    'Frekuensi_Membantu': 2,  # \"Kadang-kadang\" -> 2\n    'Aktivitas_Favorit': 1,  # Encoded \"Belajar\" -> 1\n    'Rencana_Besok': 1,  # Encoded \"Belajar\" -> 1\n    'Kepuasan_Hari': 4,  # \"Tidak puas sama sekali\" -> 4\n    'Peningkatan_Besok': 0  # Encoded \"Lebih banyak bermain\" -> 0\n}])\n\nsample_remaja = pd.DataFrame([{\n    'Perasaan_Sekolah': 2,  # \"Cukup tertarik\" -> 2\n    'Stres_Tingkat': 3,  # \"Sering\" -> 3\n    'Aktivitas_Favorit': 0,  # Encoded \"Mendengarkan musik\" -> 0\n    'Interaksi_Teman_Keluarga': 2,  # \"Tidak sama sekali\" -> 2\n    'Dukungan_Sosial': 2,  # \"Tidak pernah\" -> 2\n    'Rencana_Besok': 0,  # Encoded \"Mendengarkan musik\" -> 0\n    'Keyakinan_Tujuan_Hidup': 4  # \"Tidak yakin sama sekali\" -> 4\n}])\n\nsample_dewasa = pd.DataFrame([{\n    'Perasaan_Karier': 2,  # \"Tidak puas\" -> 2\n    'Stres_Tingkat': 3,  # \"Sering\" -> 3\n    'Aktivitas_Favorit': 2,  # Encoded \"Minum kopi/teh\" -> 2\n    'Interaksi_Orang_Lain': 2,  # \"Tidak sama sekali\" -> 2\n    'Dukungan_Sosial': 2,  # \"Tidak pernah\" -> 2\n    'Rencana_Besok': 3,  # Encoded \"Olahraga\" -> 3\n    'Keyakinan_Tujuan_Hidup': 4  # \"Tidak yakin sama sekali\" -> 4\n}])\n# Predict mood for each age group\npredicted_anak = model_anak.predict(sample_anak)[0]\npredicted_remaja = model_remaja.predict(sample_remaja)[0]\npredicted_dewasa = model_dewasa.predict(sample_dewasa)[0]\n\n# Map predictions to mood labels\nmood_reverse_mapping = {1: \"Senang\", 2: \"Biasa saja\", 3: \"Sedikit sedih\", 4: \"Sangat sedih\"}\nprint(\"Predicted Mood for Anak-Anak:\", mood_reverse_mapping[predicted_anak])\nprint(\"Predicted Mood for Remaja:\", mood_reverse_mapping[predicted_remaja])\nprint(\"Predicted Mood for Dewasa:\", mood_reverse_mapping[predicted_dewasa])\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-28T06:39:37.620342Z","iopub.execute_input":"2025-03-28T06:39:37.620734Z","iopub.status.idle":"2025-03-28T06:39:37.701563Z","shell.execute_reply.started":"2025-03-28T06:39:37.620704Z","shell.execute_reply":"2025-03-28T06:39:37.700480Z"}},"outputs":[{"name":"stdout","text":"Predicted Mood for Anak-Anak: Sangat sedih\nPredicted Mood for Remaja: Senang\nPredicted Mood for Dewasa: Sedikit sedih\n","output_type":"stream"}],"execution_count":22}]}